<script type="module">
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        // register the worker
        navigator.serviceWorker.register('/service-worker.js');

        // cache the offline page when the page loads
        caches.open('govuk-ds-saved-pages').then(cache => {
            // always add an updated version of the offline page
            cache.add('/offline/index.html');
        });

        // gather page data for the offline page if required
        const documentData = {
            'title': document.querySelector('title').innerText,
            'description': document.querySelector('meta[name="description"]').getAttribute('content')
        }
        // store the page data in localStorage for use on the offline page
        if(navigator.onLine){
            localStorage.setItem(
                window.location.href,
                JSON.stringify(documentData)
            )
        }
    });

    // stop the localstorage getting too big
    function trimLocalStorage(length){
        // check see if storage is too big
        if(localStorage.length > length){
            // remove the oldest item
            localStorage.removeItem(localStorage.key(0));
            // recursivly run the function again if required
            return trimLocalStorage(length);
        }
        // storage now the correct length, return
        return;
    }

    // trim localstorage to the number of pages we want to store
    trimLocalStorage(40);

    var ConnectionStatus = (function () {
        var messageWrapper

        function init () {
            // generate the message wrapper
            messageWrapper = document.createElement('div')
            messageWrapper.style.cssText = 'position:fixed; bottom:0; right: 0; display:none; z-index: 10;'
            messageWrapper.className = 'govuk-tag app-tag--review govuk-message-wrapper'

            // append the wrapper to the page
            document.body.appendChild(messageWrapper)
        }

        var showMessage = function (message) {
            messageWrapper.innerHTML = message
            messageWrapper.style.display = 'block'
        }

        var hideMessage = function () {
            messageWrapper.innerHTML = ''
            messageWrapper.style.display = 'none'
        }

        var update = function () {
            if (navigator.onLine) { // online
                // hide the message
                hideMessage()
            } else { // offline
                showMessage('Offline')
            }
        }

        // initialise the module
        init()

        // expose methods publicly
        return {
            update: update
        }
    }())

    // Check see if page is already offline
    ConnectionStatus.update();

    // trigger the connection state events
    window.addEventListener('online', ConnectionStatus.update)
    window.addEventListener('offline', ConnectionStatus.update)
}
</script>