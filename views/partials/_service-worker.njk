<script type="module">
import {Workbox} from 'https://storage.googleapis.com/workbox-cdn/releases/4.2.0/workbox-window.prod.mjs';

if ('serviceWorker' in navigator) {
    // SW Registration
    const wb = new Workbox('/service-worker.js')
    wb.register()

    // cache the offline page when the page loads
    window.addEventListener('load', () => {
        caches.open('govuk-ds-saved-pages').then(cache => {
            // always add an updated version of the offline page
            cache.add('/offline/index.html');
        })
    });

    // Check see if the page has already been saved
    caches.match(window.location.href)
    .then(isPageInCache => {
        const insertPoint = document.querySelector('div.app-content__header')
        const offlineButton = document.createElement('button')
        offlineButton.className = `govuk-button`;
        offlineButton.innerText = isPageInCache ? `Remove from cache` : `Save for offline reading`;

        if(insertPoint){
            if(window.location.href.includes('/offline/')){return;}
            insertPoint.prepend(offlineButton)

            offlineButton.addEventListener('click', event => {
                event.preventDefault()
                offlineButton.innerText = `One moment please...`

                if(isPageInCache){
                    caches.open('govuk-ds-saved-pages')
                    .then(cacheName => {
                        isPageInCache = false;
                        let iframeArray = JSON.parse(localStorage.getItem(window.location.href)).iframes;
                        localStorage.removeItem(window.location.href)
                        offlineButton.innerText = `Save for offline reading`
                        return cacheName.delete(window.location.href)
                            .then(() => {
                                return Promise.all(iframeArray.map(iframe => {
                                    return cacheName.delete(iframe);
                                }))
                            });
                    })
                } else {
                    caches.open('govuk-ds-saved-pages')
                    .then(openCache => {
                        openCache.add(window.location.href)
                        .then(() => {
                            let pageIframes = document.getElementsByTagName('iframe');
                            // check see if we have iframes on the page
                            if(pageIframes.length){
                                // convert to a real array
                                pageIframes = Array.from(pageIframes)
                                    // map over iframs to get their src attributes
                                    .map(iframe => iframe.getAttribute('src'));

                                // create an array of unique values (any duplicates throw a DOMException)
                                var uniqueUrls = [...new Set(pageIframes)];
                                
                                // add the iframes to the cache
                                openCache.addAll(uniqueUrls).then(result => {
                                    return result;
                                }).catch(error => {
                                    console.warn(error);
                                });
                            }

                            const documentData = {
                                'title': document.querySelector('title').innerText,
                                'description': document.querySelector('meta[name="description"]').getAttribute('content'),
                                'iframes': uniqueUrls
                            }

                            localStorage.setItem(
                                window.location.href,
                                JSON.stringify(documentData)
                            )

                            offlineButton.innerText = `Page Saved!`
                            isPageInCache = true
                        })
                    })
                }
            })
        }
    })
}
</script>